[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "o-nakala-core"
version = "2.5.0"
authors = [
    {name = "xy-liao"},
]
description = "A comprehensive Python library and CLI toolkit for the NAKALA research data repository, designed for digital humanities workflows"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Database",
    "Topic :: Text Processing",
]
keywords = ["nakala", "research-data", "repository", "api-client", "digital-humanities", "metadata", "cli", "academic"]

dependencies = [
    "requests>=2.32.3",
    "tenacity>=9.1.2",
    "typing-extensions>=4.14.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
cli = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
]
ml = [
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
]
all = [
    "o-nakala-core[dev,cli,ml]"
]

[project.urls]
Homepage = "https://nakala.fr"
Repository = "https://github.com/xy-liao/o-nakala-core"
Documentation = "https://nakala.fr/documentation"
"Bug Tracker" = "https://github.com/xy-liao/o-nakala-core/issues"

[project.scripts]
o-nakala-upload = "o_nakala_core.cli.upload:main"
o-nakala-collection = "o_nakala_core.cli.collection:main"
o-nakala-curator = "o_nakala_core.cli.curator:main"
o-nakala-user-info = "o_nakala_core.cli.user_info:main"
o-nakala-preview = "o_nakala_core.cli.preview:preview"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "integration: marks tests as integration tests that may require API access",
    "slow: marks tests as slow running tests",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]