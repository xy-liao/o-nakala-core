name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev,ml]
    
    - name: Verify installation
      run: |
        python -c "import o_nakala_core; print('Package imported successfully')"
        python -c "import pytest; print('Pytest imported successfully')"
    
    - name: Lint with flake8
      run: |
        flake8 src/o_nakala_core --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/o_nakala_core --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check src/o_nakala_core
    
    - name: Type check with mypy
      run: |
        mypy src/o_nakala_core
      continue-on-error: true
    
    - name: Test with pytest
      env:
        PYTHONPATH: ${{ github.workspace }}/src:${{ github.workspace }}
        NAKALA_API_KEY: "aae99aba-476e-4ff2-2886-0aaf1bfa6fd2"
      run: |
        python -m pytest tests/ --cov=src/o_nakala_core --cov-report=xml --cov-report=term-missing -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/